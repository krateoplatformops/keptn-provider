# tasks file for Project
---
- name: Retrieve access data for Keptn
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: "{{ api.token_secret_ref.name }}"
    namespace: "{{ api.token_secret_ref.namespace }}"
  register: keptn_secret

- name: Check if the project already exists
  uri:
    url: "{{ api.url }}/controlPlane/v1/project/{{ project_name }}"
    method: GET
    validate_certs: false
    return_content: yes
    status_code:
      - 200
      - 404
    body_format: json
    headers:
      accept: application/json
      x-token: "{{ keptn_secret.resources[0].data[api.token_secret_ref.key] | b64decode }}"
  register: check_project

- name: Create Keptn project and related service
  block:
    - name: Retrieve access data for Git repository
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        name: "{{ git.token_secret_ref.name }}"
        namespace: "{{ git.token_secret_ref.namespace }}"
      register: github_secret

    - name: Create the project just in case it's not found
      uri:
        url: "{{ api.url }}/controlPlane/v1/project"
        method: POST
        return_content: yes
        validate_certs: false
        timeout: 300
        status_code:
          - 201
        body_format: json
        body:
          gitRemoteURL: "{{ git.url }}"
          gitToken: "{{ github_secret.resources[0].data[git.token_secret_ref.key] | b64decode }}"
          gitUser: "{{ git.user }}"
          name: "{{ project_name }}"
          shipyard: "{{ shipyard | b64encode }}"
        headers:
          accept: application/json
          x-token: "{{ keptn_secret.resources[0].data[api.token_secret_ref.key] | b64decode }}"

    - name: Create the service inside the project just created
      uri:
        url: "{{ api.url }}/controlPlane/v1/project/{{ project_name }}/service"
        method: POST
        return_content: yes
        validate_certs: false
        timeout: 300
        status_code:
          - 200
        body_format: json
        body:
          serviceName: "{{ service_name }}"
        headers:
          accept: application/json
          x-token: "{{ keptn_secret.resources[0].data[api.token_secret_ref.key] | b64decode }}"
  when: check_project.status == 404
